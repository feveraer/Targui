/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package persistence;

import domain.DomainController;

/**
 *
 * @author Sander
 */
public class PersistenceController {

    private GameMapper gameMapper = new GameMapper();
    private SquareMapper squareMapper = new SquareMapper();
    private PlayerMapper playerMapper = new PlayerMapper();
    private RoundMapper roundMapper = new RoundMapper();
    private static PersistenceController persistentieController;

    public static PersistenceController getInstance() {
        if (persistentieController == null) {
            persistentieController = new PersistenceController();
        }
        return persistentieController;
    }

    /**
     *
     */
    public void saveGame(String gameName, int numberOfRounds, int currentRound, String[][][] board, String[][] players, int[] fortuneIDs) {
        String[] gameConf;
        String[][] squareConf;
        String[][] playerConf;
        String[][] roundConf;
        String[][][] game = new String[4][49][8];

        //GAME ID!!
        game[0][0][0] = null;
        game[0][0][1] = gameName;
        game[0][0][2] = Integer.toString(numberOfRounds);
        game[0][0][3] = Integer.toString(currentRound);

        int i = 0;
        for (int x = 0; x < 7; x++) {
            for (int y = 0; y < 7; y++) {
                //volgorde 00-01-02...
                game[1][i] = board[x][y];
                i++;
            }
        }

        game[2] = players;

        i = 0;
        for (int fortune : fortuneIDs) {
            game[3][i][0] = null;
            game[3][i][1] = Integer.toString(i);
            game[3][i][2] = Integer.toString(fortune);
            game[3][i][3] = null;
            i++;
        }
        gameConf = game[0][0];
        squareConf = game[1];
        playerConf = game[2];
        roundConf = game[3];
        gameMapper.saveGame(gameConf, gameName);
        squareMapper.saveSquares(squareConf);
        playerMapper.savePlayers(playerConf);
        roundMapper.saveRounds(roundConf);

    }

    /**
     *
     * @param gameNaam
     * @return
     */
    public String[][][] getSavedGame(String gameNaam) {
        int gameId = Integer.parseInt(gameMapper.getGame(gameNaam)[0]);
        String[][][] savedGame = new String[4][49][8];
        savedGame[0][0] = gameMapper.getGame(gameNaam);
        savedGame[1] = squareMapper.getSquares(gameId);
        savedGame[2] = playerMapper.getPlayers(gameId);
        savedGame[3] = roundMapper.getRounds(gameId);
        return savedGame;
    }

}
