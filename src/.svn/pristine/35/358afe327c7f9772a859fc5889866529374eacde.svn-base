package domein;

import java.util.Random;
import utils.Sorts;

/**
 * Representeert één ronde.
 *
 * @author Frederic Everaert
 * @author Gilles Baert
 * @author Jonas De Bruycker
 * @author Sander De Quick
 */
public class Ronde {

    private Beurt[] beurten;
    private boolean afgewerkt;
    private int huidigeBeurt;

    public Ronde(Speler[] spelers, Actie noodlotskaart) {
        int groep = 0;
        Random random = new Random();
        int dobbelsteenworp = random.nextInt(6) + 1;
        if (dobbelsteenworp < 6) {
            beurten = new Beurt[dobbelsteenworp * SpelerRepository.MAX_PLAYERS + 1];
            groep = 1;
        } else if (dobbelsteenworp == 6) {
            beurten = new Beurt[2 * SpelerRepository.MAX_PLAYERS + 1];
            groep = 2;
        }
        for (int i = 0; i < beurten.length - 1; i++) {
            beurten[i] = new Beurt(spelers[i % SpelerRepository.MAX_PLAYERS], null);
        }
        beurten[beurten.length - 1] = new Beurt(null, noodlotskaart);
        Sorts.schudArray(beurten, groep);
    }

    public void speelBeurt() {
        if (!afgewerkt) {
            if (huidigeBeurt > beurten.length - 1) {
                afgewerkt = true;
            }
            else {
                //speel de beurt
            }
        }
    }

    /**
     * @return beurten
     */
    public Beurt[] getBeurten() {
        return beurten;
    }
}
