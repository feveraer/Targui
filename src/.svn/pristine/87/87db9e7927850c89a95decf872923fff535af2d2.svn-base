package gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Frederic
 */
public class StartUpJPanel extends JPanel {

    private final StartJFrame frmStart;
    private BufferedImage bg;
    private JPanel pnlContent;
    private JButton btnEn;
    private JButton btnNl;
    private JButton btnFr;
    private JLabel lblTargui;
    private JLabel lblChooseLang;
    private JLabel lblDevs;

    public StartUpJPanel(StartJFrame frmStart) {
        this.frmStart = frmStart;
        loadBackground();
        initComponents();
    }

    private void initComponents() {
        pnlContent = new JPanel();
        pnlContent.setBackground(new Color(255, 255, 255, 100));
        lblTargui = new JLabel("Targui");
        lblTargui.setFont(getTarguiFont(100));
        lblChooseLang = new JLabel("Choose your language | Kies uw taal | Choisissez votre langue");
        btnEn = new JButton("English");
        btnNl = new JButton("Nederlands");
        btnFr = new JButton("Français");
        btnEn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnEnActionPerformed();
            }
        });
        btnNl.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnNlActionPerformed();
            }
        });
        btnFr.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnFrActionPerformed();
            }
        });
        lblDevs = new JLabel("© Frederic Everaert - Gilles Baert - Jonas De Bruycker - Sander De Quick");
        lblDevs.setFont(new Font("sans-serif", Font.PLAIN, 9));
        
        javax.swing.GroupLayout pnlContentLayout = new javax.swing.GroupLayout(pnlContent);
        pnlContent.setLayout(pnlContentLayout);
        pnlContentLayout.setHorizontalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDevs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlContentLayout.createSequentialGroup()
                        .addComponent(btnEn)
                        .addGap(18, 18, 18)
                        .addComponent(btnNl)
                        .addGap(18, 18, 18)
                        .addComponent(btnFr))
                    .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblChooseLang, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                        .addComponent(lblTargui, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        pnlContentLayout.setVerticalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblTargui, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lblChooseLang, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEn)
                    .addComponent(btnNl)
                    .addComponent(btnFr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addComponent(lblDevs)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pnlContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pnlContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }

    private void loadBackground() {
        try {
            bg = ImageIO.read(getClass().getResource("../images/startupbg.jpg"));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Couldn't load background image, using none.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private Font getTarguiFont(int size) {
        Font font = new Font("sans-serif", Font.PLAIN, size/2);
        try {
            font = Font.createFont(Font.TRUETYPE_FONT, new File(getClass().getResource("../fonts/K22 Timbuctu.ttf").toURI()));
            font = font.deriveFont(Font.PLAIN, size);
            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
            ge.registerFont(font);
            return font;
        } catch (NullPointerException | FontFormatException | IOException | URISyntaxException ex) {
            JOptionPane.showMessageDialog(null, "Targui font not loaded, using sans-serif font.", "Error", JOptionPane.ERROR_MESSAGE);
            return font;
        }
    }

    private void btnEnActionPerformed() {
        frmStart.initComponents();
        frmStart.setLanguage("en");
    }

    private void btnNlActionPerformed() {
        frmStart.initComponents();
        frmStart.setLanguage("nl");
    }

    private void btnFrActionPerformed() {
        frmStart.initComponents();
        frmStart.setLanguage("fr");
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        //draw background image
        g.drawImage(bg, 0, 0, null);
    }
}
